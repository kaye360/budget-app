---
import FilterTransactions from "../../../components/_transactions/FilterTransactions.astro";
import Transaction from "../../../components/_transactions/Transaction.astro";
import H1 from "../../../components/H1.astro";
import Layout from "../../../layouts/Layout.astro";
import { convertDate } from "../../../lib/convertDate";
import { fetchData } from "../../../lib/fetch";
import type { GetBudgets, MonthlyTransactions } from "../../../types/types";

const auth = await Astro.session?.get('auth')

if( !auth ) {
	return Astro.redirect('/')
}

let { month = convertDate().to('YYYY-MM') } = Astro.params

const [transactions, budgets] = await Promise.all([
	fetchData<MonthlyTransactions>(`/api/transactions/month/${month}`),
	fetchData<GetBudgets>('/api/budgets'),
])

---

<Layout>
	
	<FilterTransactions current="month" />

	<div class="flex items-center justify-between mb-4">

		<H1>
			{ convertDate(month).to('MMMM-YYYY') }
		</H1>

		<select 
			id="month-selector"
			name="month-selector" 
			class="w-fit"
			data-month={month}
		>
			<option>Select month to view</option>
			{ transactions.response?.months.map( month => (
				<option value={month.month}>
					{month.title}
				</option>
			))}
		</select>
		
	</div>

	<transaction-list class="grid gap-6">
		{ transactions.response?.data.map( transaction => (
			<Transaction {transaction} budgets={budgets.response?.data} />
		))}
	</transaction-list>

</Layout>


<script>
import { el } from "../../../lib/el"


document.addEventListener('astro:page-load', () => {

	// Animate in
	el('budget-list', document, el => el.classList.remove('translate-x-24', 'opacity-0'))

	el<HTMLSelectElement>('#month-selector', document, select => {
		select.addEventListener('change', e => {

			if( !(e.target instanceof HTMLSelectElement) ) {
				return
			}

			if( e.target.dataset.month === e.target.value ) {
				return
			}

			// Animate out
			el('budget-list', document, el => el.classList.add('-translate-x-24', 'opacity-0'))

			window.location.href = `/transactions/month/${e.target.value}`
		})
	})

})
</script>