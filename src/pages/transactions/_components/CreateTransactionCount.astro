

<select id="transaction-count-select" class="!w-fit">
    <option value="1">Adding 1 Transaction</option>
    <option value="2">2</option>
    <option value="3">3</option>
    <option value="4">4</option>
    <option value="5">5</option>
    <option value="6">6</option>
    <option value="7">7</option>
    <option value="8">8</option>
    <option value="9">9</option>
    <option value="10">10</option>
</select>


<script>
import { el, els } from "../../../lib/el"

document.addEventListener('astro:page-load', () => {

    /**
     * 
     * Change the number of Create Transactions on the page
     * 
     * - Changes the currently selected item im select tag
     *  to Adding X Transactions instead of just the number
     * 
     * - Changes the number of transactions to add at once.
     * 
     */
    el<HTMLSelectElement>('#transaction-count-select', document, el => {
        el.addEventListener('change', (e: Event) => {

            const select = e.target

            if( !(select instanceof HTMLSelectElement) ) {
                console.warn('invalid select element')
                return
            }

            updateSelectTitle(select)
            updateTransactionCount(select)
        }) 
    })


    function updateSelectTitle( select: HTMLSelectElement ) {

        const currentCount = Number( select.value )

        Array.from( select.children ).forEach( (opt, i) => {
            i += 1
            const plural = i !== 1 ? 's' : ''
            opt.textContent = i === currentCount 
                ? String(`Adding ${i} transaction${plural}`) 
                : String(i)
        })
    }


    function updateTransactionCount( select : HTMLSelectElement ) {

        const newTransactionCount = Number( select.value )
        const prevTransactionCount = els('transaction-create').length
        const difference = Math.abs( prevTransactionCount - newTransactionCount )

        if ( newTransactionCount > prevTransactionCount ) {
            addTransactions(difference)
        }

        if( newTransactionCount < prevTransactionCount ) {
            removeTransactions(newTransactionCount)
        }
    }


    function addTransactions( difference: number ) {

        const createTransactionList = el('transaction-create-list')
        const createTransactionTemplate = el<HTMLTemplateElement>('#transaction-create')

        if( !createTransactionTemplate || !createTransactionList ) {
            console.warn('Invalid transactionTemplate or transactionList')
            return
        }

        for( let i = 1; i <= difference; i++ ) {
            const createTransactionFragment = createTransactionTemplate.content.cloneNode(true)
            const createTransaction = el('transaction-create', createTransactionFragment)

            if( !createTransaction) {
                console.warn('invalid transaction-create')
                return
            }

            const inputs = els<HTMLInputElement>('input, select', createTransaction)
            inputs.forEach( input => {
                const name = input.dataset.name
                input.setAttribute( 'name', `${name}-${i}` )
            })
            createTransactionList.append(createTransaction)
        }
    }

    
    function removeTransactions( newCount : number ) {
        els('transaction-create').forEach( (transaction, i) => {
            if( i+1 > newCount ) {
                transaction.remove()
            }
        })
    }

})


</script>