---
import Layout from "../layouts/Layout.astro";
import { ArrowLeftRightIcon, BotIcon, ChartPieIcon } from "@lucide/astro"
import Transaction from "../components/_transactions/Transaction.astro";
import { getBudgetsWithTotalSpent, getAllBudgetTotalSpent } from "../utils/budget.utils";
import type { GetBudgets, RecentTransactions, Transaction as TransactionType } from "../types/types";
import Budget from "../components/_budgets/Budget.astro";
import { fetchData } from "../lib/fetch";
import { convertDate } from "../lib/convertDate";

const auth = await Astro.session?.get('auth')

if( !auth ) {
    return Astro.redirect('/')
}

const [transactions, budgets] = await Promise.all([
	fetchData<RecentTransactions>('/api/transactions/recent?perPage=5'),
	fetchData<GetBudgets>('/api/budgets'),
])

const budgetsWithTotals = getBudgetsWithTotalSpent(budgets.response?.data, transactions.response?.data)

const allBudgetTotals = getAllBudgetTotalSpent(budgetsWithTotals)
---
<Layout>

	<div class="text-2xl mb-16 mt-12 flex items-center gap-2 font-theme">
		<BotIcon width="36" height="36" />
		Welcome Back {auth.userName}!
	</div>

	<div class="grid md:grid-cols-2 gap-8">

		<div>
			<h2 class="flex items-center gap-2 font-semibold tex-2xl mb-6">
				<ChartPieIcon />
				Your budgets: {convertDate().to('MMM-YYYY')}
			</h2>
			<div>
				<Budget
					budget={{
						totalSpent : allBudgetTotals.totalSpent,
						percentSpent : allBudgetTotals.percentSpent,
						amount : allBudgetTotals.totalAmount,
						id : 1,
						name : `${ convertDate().to('MMMM-YYYY') } Total `,
						userId : 1
					}}
					index={0}
					isTotal
				/>
				<div class="my-6 border-b border-slate-300"/>
			</div>
			<budget-list class="grid gap-8 text-lg w-full">
				{ budgetsWithTotals.map( (budget, index ) => (
					<Budget {budget} {index} />
				))}
			</budget-list>
		</div>

		<div class="bg-blue/5 rounded-sm p-4">
			<h2 class="flex items-center gap-2 font-semibold tex-2xl mb-6">
				<ArrowLeftRightIcon />
				Recent Transactions
			</h2>
			<transaction-list class="grid">
				{ 
					transactions.response?.data.map( (transaction : TransactionType) =>
						<Transaction {transaction} budgets={budgets.response?.data} mode="simple" />
					)
				}
			</transaction-list>
		</div>


		<div class="bg-blue/10 rounded-sm p-4 min-h-32">Debt</div>
		<div class="bg-blue/10 rounded-sm p-4 min-h-32">Income</div>
		<div class="bg-blue/10 rounded-sm p-4 min-h-32">
			Upcoming Bills
		</div>
	</div>
</Layout>