---
import { actions } from "astro:actions";
import { convertDate } from "../../../lib/convertDate";
import type { Transaction as TransactionType } from "../../../types/types";
import TransactionListLayout from "../../../layouts/TransactionListLayout.astro";
import TransactionList from "../components/TransactionList";
import Transaction from "../components/Transaction";

const { routeParam } = Astro.props
const month = routeParam ?? convertDate().to('YYYY-MM')

const [transactions, budgets] = await Promise.all([
	Astro.callAction( actions.transaction.index, {filter : 'month', filterValue : month} ),
	Astro.callAction( actions.budget.index, {} )
])

---

<TransactionListLayout
	title={convertDate(month).to('MMMM-YYYY')}
	active="month"
>
	<div class="flex justify-right mb-4">
		<select 
			id="month-selector"
			name="month-selector" 
			class="w-fit ml-auto"
			data-month={month}
		>
			<option>Select month to view</option>
			{ !transactions.error && transactions.data.months.map( (month: { month: string, title: string }) => (
				<option value={month.month}>
					{month.title}
				</option>
			))}
		</select>
	</div>

	<TransactionList>
		{ transactions.data.list.map( (transaction: TransactionType) => (
			<Transaction {transaction} budgets={budgets.data ?? []} actionButton="edit" client:idle />
		))}
	</TransactionList>


</TransactionListLayout>


<script>
import { el } from "../../../lib/el"


document.addEventListener('DOMContentLoaded', () => {

	el<HTMLSelectElement>('#month-selector', document, select => {
		select.addEventListener('change', e => {

			if( !(e.target instanceof HTMLSelectElement) ) {
				return
			}

			if( e.target.dataset.month === e.target.value ) {
				return
			}

			window.location.href = `/transactions/month/${e.target.value}`
		})
	})

})
</script>