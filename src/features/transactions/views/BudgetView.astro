---
import { actions } from "astro:actions"
import type { Transaction as TransactionType } from "../../../types/types"
import TransactionListLayout from "../../../layouts/TransactionListLayout.astro"
import TransactionList from "../components/TransactionList"
import Transaction from "../components/Transaction"

const budget = Astro.props.routeParam
const budgets = await Astro.callAction( actions.budget.index, {} )
const budgetName = budgets.data?.find( b => b.id === Number(budget) )?.name

let transactions: TransactionType[] = []

if( budget ) {
	const transactionsResult = await Astro.callAction( actions.transaction.index, {
		filter : 'budget', 
		filterValue : budget, 
	})

	if( !transactionsResult.error ) {
		transactions = transactionsResult.data as TransactionType[]
	}
}

---

<TransactionListLayout
	title={ budgetName || 'Select a Budget' }
	active="budget"
>

	<div class="flex items-center justify-start gap-2 mb-4">
		<select 
			id="budget-selector"
			name="budget-selector" 
			class="max-w-fit ml-auto"
			data-budget={budget}
		>
			<option>Select budget to view</option>
			{ budgets.data?.map( budget => (
				<option value={budget.id}>
					{budget.name}
				</option>
			))}
		</select>
	</div>

	<TransactionList>
		{ transactions.map( (transaction: TransactionType) => (
			<Transaction {transaction} budgets={budgets.data ?? []} actionButton="edit" client:idle />
		))}
	</TransactionList>

</TransactionListLayout>


<script>
import { el } from "../../../lib/el"

document.addEventListener('DOMContentLoaded', () => {

	el<HTMLSelectElement>('#budget-selector', document, select => {
		select.addEventListener('change', e => {

			if( !(e.target instanceof HTMLSelectElement) ) {
				return
			}

			if( e.target.dataset.budget === e.target.value ) {
				return
			}

			window.location.href = `/transactions/budget/${e.target.value}`
		})
	})

})
</script>

